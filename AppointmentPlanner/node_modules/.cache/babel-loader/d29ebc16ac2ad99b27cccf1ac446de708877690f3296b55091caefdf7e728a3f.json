{"ast":null,"code":"import _toConsumableArray from\"/Users/admin/Desktop/Olya/FrontEnd/AppointmentPlanner/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/admin/Desktop/Olya/FrontEnd/AppointmentPlanner/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{RouterProvider,createBrowserRouter,createRoutesFromElements,Route,Navigate}from\"react-router-dom\";import Root,{ROUTES}from\"./components/root/Root\";import{AppointmentsPage}from\"./containers/appointmentsPage/AppointmentsPage\";import{ContactsPage}from\"./containers/contactsPage/ContactsPage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){/*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContact=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),appointments=_useState4[0],setAppointment=_useState4[1];var addContact=function addContact(contact){if(contacts.find(function(t){return t.id===contact.id;}))return;setContact([].concat(_toConsumableArray(contacts),[contact]));};var addAppointment=function addAppointment(appointment){if(appointments.find(function(t){return t.id===appointment.id;}))return;setAppointment([].concat(_toConsumableArray(appointments),[appointment]));};/*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */var router=createBrowserRouter(createRoutesFromElements(/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Root,{}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(Navigate,{to:ROUTES.CONTACTS,replace:true})}),/*#__PURE__*/_jsx(Route,{path:ROUTES.CONTACTS,element:/*#__PURE__*/_jsx(ContactsPage,{})/* Add props to ContactsPage */}),/*#__PURE__*/_jsx(Route,{path:ROUTES.APPOINTMENTS,element:/*#__PURE__*/_jsx(AppointmentsPage,{})/* Add props to AppointmentsPage */})]})));return/*#__PURE__*/_jsx(RouterProvider,{router:router});}export default App;","map":{"version":3,"names":["useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","contacts","setContact","_useState3","_useState4","appointments","setAppointment","addContact","contact","find","t","id","concat","_toConsumableArray","addAppointment","appointment","router","path","element","children","index","to","CONTACTS","replace","APPOINTMENTS"],"sources":["/Users/admin/Desktop/Olya/FrontEnd/AppointmentPlanner/src/App.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n const [contacts, setContact] = useState([]);\r\n const [appointments, setAppointment] = useState([]);\r\n\r\n    const addContact = (contact) => {\r\n      if (contacts.find(t => t.id === contact.id)) return;\r\n      setContact([...contacts, contact]);\r\n    };\r\n\r\n        const addAppointment = (appointment) => {\r\n      if (appointments.find(t => t.id === appointment.id)) return;\r\n      setAppointment([...appointments, appointment]);\r\n    };\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage /> /* Add props to ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage /> /* Add props to AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"8RAAA,OAAQA,QAAQ,KAAO,OAAO,CAC9B,OAASC,cAAc,CAAEC,mBAAmB,CAAEC,wBAAwB,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACjH,MAAO,CAAAC,IAAI,EAAIC,MAAM,KAAQ,wBAAwB,CACrD,OAASC,gBAAgB,KAAQ,gDAAgD,CACjF,OAASC,YAAY,KAAQ,wCAAwC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACF;AACA;AACA,IACC,IAAAC,SAAA,CAA+Bf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAApCG,QAAQ,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC3B,IAAAI,UAAA,CAAuCpB,QAAQ,CAAC,EAAE,CAAC,CAAAqB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA5CE,YAAY,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAEhC,GAAM,CAAAG,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,OAAO,CAAK,CAC9B,GAAIP,QAAQ,CAACQ,IAAI,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACC,EAAE,GAAKH,OAAO,CAACG,EAAE,GAAC,CAAE,OAC7CT,UAAU,IAAAU,MAAA,CAAAC,kBAAA,CAAKZ,QAAQ,GAAEO,OAAO,GAAE,CACpC,CAAC,CAEG,GAAM,CAAAM,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,WAAW,CAAK,CAC1C,GAAIV,YAAY,CAACI,IAAI,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACC,EAAE,GAAKI,WAAW,CAACJ,EAAE,GAAC,CAAE,OACrDL,cAAc,IAAAM,MAAA,CAAAC,kBAAA,CAAKR,YAAY,GAAEU,WAAW,GAAE,CAChD,CAAC,CACH;AACF;AACA;AACA,IAEE,GAAM,CAAAC,MAAM,CAAG/B,mBAAmB,CAACC,wBAAwB,cACzDU,KAAA,CAACT,KAAK,EAAC8B,IAAI,CAAC,GAAG,CAACC,OAAO,cAAGxB,IAAA,CAACL,IAAI,IAAI,CAAA8B,QAAA,eACjCzB,IAAA,CAACP,KAAK,EAACiC,KAAK,MAACF,OAAO,cAAGxB,IAAA,CAACN,QAAQ,EAACiC,EAAE,CAAE/B,MAAM,CAACgC,QAAS,CAACC,OAAO,OAAI,EAAE,cACnE7B,IAAA,CAACP,KAAK,EAAC8B,IAAI,CAAE3B,MAAM,CAACgC,QAAS,CAACJ,OAAO,cAAGxB,IAAA,CAACF,YAAY,IAAI,+BAAiC,EAAE,cAC5FE,IAAA,CAACP,KAAK,EAAC8B,IAAI,CAAE3B,MAAM,CAACkC,YAAa,CAACN,OAAO,cAAGxB,IAAA,CAACH,gBAAgB,IAAI,mCAAqC,EAAE,GAClG,CACT,CAAC,CAEF,mBACEG,IAAA,CAACV,cAAc,EAACgC,MAAM,CAAEA,MAAO,EAAE,CAErC,CAEA,cAAe,CAAAnB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}